===============================
 The ``4-print_square`` module
===============================

Using ``print_square()``
------------------------

Prints a ``#``s square of a givin ``size``.

SetUp
=====

::

	>>> print_square = __import__("4-print_square").print_square

Normal Usage
============

It should print the square normally.

::

	>>> print_square(0)
	<BLANKLINE>

	>>> print_square(3)
	###
	###
	###

	>>> print_square(1)
	#

Wrong Type
==========

It raises a ``TypeError`` in case ``size`` is not integer.

::

	>>> print_square(4.2)
	Traceback (most recent call last):
		...
	TypeError: size must be an integer

	>>> print_square(None)
	Traceback (most recent call last):
		...
	TypeError: size must be an integer

	>>> print_square(-3.1)
	Traceback (most recent call last):
		...
	TypeError: size must be an integer

Wrong Values
============

It raises a ``ValueError`` if ``size`` is less than zero.

::

	>>> print_square(-1)
	Traceback (most recent call last):
		...
	ValueError: size must be >= 0
